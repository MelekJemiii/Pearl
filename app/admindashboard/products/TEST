"use client";
import React, { useState } from 'react';
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from '@/components/ui/button';
import { Textarea } from "@/components/ui/textarea";
import { useRouter } from 'next/navigation';
import { useRef } from 'react';
import PhotoCard from './PhotoCard';
const Add_product = () => {
  const formRef = useRef();
  const [name, setName] = useState("");
  const [description, setDescription] = useState("");
  const [price, setPrice] = useState("");
  const [quantity, setQuantity] = useState("");
  const [files, setFiles] = useState([]);
  const [error, setError] = useState(""); // Error 
  const router = useRouter();
async function handleinputfile(e) {
  const files = e.target.files;
  const newFiles= [...files].filter(file => {
    if(file.size < 1024*1024 && file.type.startsWith('image/'))
    {
      return file;
        }
  })
  setFiles(prev => [...newFiles,...prev]);
  formRef.current.reset();
}
  async function handleDeleteFile(index) {
    const newFiles=files.filter((_,i)=>i!==index);
    setFiles(newFiles);
  }
  const handleSubmit = async (e) => {
    e.preventDefault();
  
    // Form validation
    if (!name || !description || !price || !quantity ) {
      setError("All fields are required.");
      return;
    }
  
    // Create FormData object to handle file upload
    const formData = new FormData();
    formData.append("name", name);  // Add name
    formData.append("description", description);  // Add description
    formData.append("price", price);  // Add price
    formData.append("quantity", quantity);  // Add quantity
    // formData.append("picture", picture);  // Add picture file
  
    try {
      // Send data to backend (POST request)
      const response = await fetch("../../api/backofficeProducts", {
        method: "POST",
        body: formData,
      });
  
      if (!response.ok) {
        const errorData = await response.json();
        setError(errorData.message || "Failed to add product.");
        return;
      }
  
      // After successful product creation, redirect to another page (admin dashboard)
      router.push("/admindashboard/products");
  
    } catch (error) {
      console.error("Error adding product:", error);
      setError("An error occurred. Please try again.");
    }
  };
  
  

  return (
    <form ref={formRef} onSubmit={handleSubmit}>
      <div className="grid w-full max-w-sm items-center">
        <Label htmlFor="name">Name</Label>
        <Input
          onChange={(e) => setName(e.target.value)}
          type="text"
          id="name"
          placeholder="Product Name"
        />
      </div>

      <div className="grid w-full gap-1.5">
        <Label htmlFor="description">Product Description</Label>
        <Textarea
          onChange={(e) => setDescription(e.target.value)}
          placeholder="Type your description here."
          id="description"
        />
      </div>

      <div className="grid w-full max-w-sm items-center">
        <Label htmlFor="price">Price</Label>
        <Input
          onChange={(e) => setPrice(e.target.value)}
          type="number"
          id="price"
          placeholder="Product Price"
        />
      </div>

      <div className="grid w-full max-w-sm items-center">
        <Label htmlFor="quantity">Quantity</Label>
        <Input
          onChange={(e) => setQuantity(e.target.value)}
          type="number"
          id="quantity"
          placeholder="Product Quantity"
        />
      </div>

      <div className="grid w-full max-w-sm items-center gap-2">
        <Label htmlFor="picture">Picture</Label>
        <input type="file" name="" accept='image/*' onChange={handleinputfile}  id="" multiple/>
        {files.map((file,index)=>(
            <PhotoCard key={index} url={URL.createObjectURL(file)} onClick={()=>handleDeleteFile(index)} />
        )
        )
        }
      </div>

      {error && <p className="text-red-500 text-sm">{error}</p>}

      <Button type="submit">Add Product</Button>
    </form>
  );
};

export default Add_product;
